name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: true

      - name: Run type checking
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Run tests (verbose JSON)
        run: npm run test:ci
        env:
          CI: true

      - name: Generate coverage report
        if: matrix.node-version == '20.x'
        run: npm run test:coverage

      - name: Check coverage thresholds
        if: matrix.node-version == '20.x'
        run: npx ts-node scripts/test-report.ts check

      - name: Fail if coverage thresholds not met
        if: matrix.node-version == '20.x'
        run: npm run coverage:check

      - name: Upload coverage to Codecov (optional)
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        # env:
        #   CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            test-results.json
            coverage/
          retention-days: 30

      - name: Publish test report comment (PRs)
        if: github.event_name == 'pull_request' && matrix.node-version == '20.x'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('coverage/coverage-summary.json')) {
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              const comment = `## üìä Test Coverage Report\n\n| Metric | Coverage |\n|--------|----------|\n| Statements | ${total.statements.pct}% |\n| Branches | ${total.branches.pct}% |\n| Functions | ${total.functions.pct}% |\n| Lines | ${total.lines.pct}% |\n\n${total.statements.pct >= 80 ? '‚úÖ' : '‚ö†Ô∏è'} Overall coverage: **${total.statements.pct}%**`;
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment,
              });
            }
