version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - fleet-network

  db:
    image: postgis/postgis:15-3.3
    environment:
      - POSTGRES_USER=fleet_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=fleet_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./lib/database/fleet-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - fleet-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - fleet-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - fleet-network

volumes:
  postgres_data:
  redis_data:

networks:
  fleet-network:
    driver: bridge
