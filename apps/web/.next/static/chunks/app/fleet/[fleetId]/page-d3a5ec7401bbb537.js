(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5768],{63306:function(e,t,n){Promise.resolve().then(n.t.bind(n,72972,23)),Promise.resolve().then(n.bind(n,60698)),Promise.resolve().then(n.bind(n,72380))},60698:function(e,t,n){"use strict";n.d(t,{DevSeedLoader:function(){return c}});var a=n(2265),i=n(38608);function c(){return(0,a.useEffect)(()=>{(0,i.CP)()},[]),null}},72380:function(e,t,n){"use strict";n.d(t,{default:function(){return u}});var a=n(57437),i=n(2265),c=n(40074);function r(){return"id-"+Math.random().toString(36).slice(2,10).replace(/[^a-z0-9]/g,"")}class s{async createVehicle(e){let t={...e,id:r(),createdAt:new Date,updatedAt:new Date,version:1};return await c.k6.vehicles.add(t),await this.queueSync("create",t),t}async updateVehicle(e,t){let n=await c.k6.vehicles.get(e);if(!n)throw Error("Vehicle not found");let a={...n,...t,updatedAt:new Date,version:n.version+1};return await c.k6.vehicles.put(a),await this.queueSync("update",a),a}async deleteVehicle(e){let t=await c.k6.vehicles.get(e);t&&(await c.k6.vehicles.delete(e),await this.queueSync("delete",t))}async getVehicle(e){return c.k6.vehicles.get(e)}async getFleetVehicles(e,t){var n,a,i;let r=null!==(n=null==t?void 0:t.limit)&&void 0!==n?n:100,s=null!==(a=null==t?void 0:t.offset)&&void 0!==a?a:0,l=c.k6.vehicles.where("[fleetId+status]").equals([e,null!==(i=null==t?void 0:t.status)&&void 0!==i?i:void 0]);return(null==t?void 0:t.status)||(l=c.k6.vehicles.where("fleetId").equals(e)),await l.offset(s).limit(r).toArray()}async getFleetStatistics(e){let t,n,a,i;let r=await c.k6.vehicles.where("fleetId").equals(e).toArray(),s=r.length,l=(t="active",r.filter(e=>e.status===t).length),d=(n="in_use",r.filter(e=>e.status===n).length),o=(a="maintenance",r.filter(e=>e.status===a).length),u=(i="out_of_service",r.filter(e=>e.status===i).length),h=s?r.reduce((e,t)=>e+(t.odometer||0),0)/s:0;return{total:s,active:l,inUse:d,maintenance:o,outOfService:u,utilizationRate:s?d/s*100:0,averageOdometer:h}}async searchVehicles(e,t){let n=t.toLowerCase();return(await c.k6.vehicles.where("fleetId").equals(e).toArray()).filter(e=>e.vin.toLowerCase().includes(n)||e.licensePlate.toLowerCase().includes(n)||e.make.toLowerCase().includes(n)||e.model.toLowerCase().includes(n))}async getVehiclesDueForMaintenance(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:7,n=await c.k6.vehicles.where("fleetId").equals(e).toArray(),a=new Date(Date.now()+864e5*t);return n.filter(e=>e.nextMaintenance&&e.nextMaintenance<=a)}async queueSync(e,t){let n={id:r(),entityType:"vehicle",entityId:t.id,operation:e,data:t,timestamp:new Date,userId:"current-user",synced:!1,retryCount:0};await c.k6.syncOperations.add(n)}}let l=new s;function d(){return"id_"+Math.random().toString(36).slice(2,10)}class o{static getInstance(){return o.instance||(o.instance=new o),o.instance}startScheduler(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:36e5;this.stopScheduler(),this.checkInterval=setInterval(()=>{this.runMaintenanceCheck()},e),this.runMaintenanceCheck(),console.log("[Maintenance] Scheduler started")}stopScheduler(){this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null)}async runMaintenanceCheck(){console.log("[Maintenance] Running maintenance check...");try{for(let e of(await c.k6.vehicles.toArray()))await this.checkVehicleMaintenance(e);console.log("[Maintenance] Check complete")}catch(e){console.error("[Maintenance] Check failed:",e)}}async checkVehicleMaintenance(e){let t=await c.k6.maintenanceSchedules.where("vehicleId").equals(e.id).first();if(!t){await this.createDefaultSchedule(e);return}this.isMaintenanceDue(e,t)&&await this.scheduleMaintenance(e,t),await this.checkPredictiveMaintenance(e)}isMaintenanceDue(e,t){let n=new Date;return"time"===t.scheduleType?t.nextDue<=n:"mileage"===t.scheduleType&&(t.lastCompleted,t.nextDue<=n)}async scheduleMaintenance(e,t){if(await c.k6.workOrders.where("vehicleId").equals(e.id).and(e=>"pending"===e.status||"scheduled"===e.status).first())return;let n={id:d(),vehicleId:e.id,scheduleId:t.id,status:"pending",priority:this.determinePriority(t),tasks:t.tasks,scheduledDate:this.calculateScheduledDate(t),createdAt:new Date,updatedAt:new Date};await c.k6.workOrders.add(n),await l.updateVehicle(e.id,{status:"maintenance",nextMaintenance:n.scheduledDate}),await this.notifyMaintenance(e,n),await this.updateScheduleNextDue(t)}determinePriority(e){let t=this.calculateDaysOverdue(e);return t>30?"critical":t>14?"high":t>7?"medium":"low"}calculateDaysOverdue(e){return Math.floor((new Date().getTime()-e.nextDue.getTime())/864e5)}calculateScheduledDate(e){return new Date(Date.now()+6048e5)}async updateScheduleNextDue(e){let t;t=new Date("time"===e.scheduleType?e.nextDue.getTime()+864e5*e.interval:Date.now()+7776e6),await c.k6.maintenanceSchedules.update(e.id,{lastCompleted:new Date,nextDue:t})}async notifyMaintenance(e,t){try{if("Notification"in window){let t=Notification.permission;"granted"===t&&new Notification("Maintenance Scheduled",{body:"".concat(e.make," ").concat(e.model," (").concat(e.licensePlate,") scheduled"),icon:"/maintenance-icon.png"})}}catch(e){}}async checkPredictiveMaintenance(e){for(let t of(await this.analyzePredictiveFactors(e)))t.confidence>.7&&await this.createPredictiveWorkOrder(e,t)}async analyzePredictiveFactors(e){let t=[],n=await this.calculateMileageRate(e);return n>500&&t.push({type:"oil_change",reason:"High mileage usage detected",confidence:.8,estimatedDate:this.projectNextMaintenance(e,n)}),new Date().getFullYear()-e.year>5&&t.push({type:"inspection",reason:"Vehicle age exceeds 5 years",confidence:.75,estimatedDate:new Date(Date.now()+2592e6)}),t}async createPredictiveWorkOrder(e,t){if(await c.k6.workOrders.where("vehicleId").equals(e.id).and(e=>"pending"===e.status&&e.tasks.some(e=>e.category===t.type)).first())return;let n={id:d(),vehicleId:e.id,status:"pending",priority:"medium",tasks:[{id:d(),name:"Predictive: ".concat(t.type),category:t.type,description:t.reason,estimatedDuration:60,priority:"medium"}],scheduledDate:t.estimatedDate,notes:"Predictive (".concat((100*t.confidence).toFixed(0),"% confidence)"),createdAt:new Date,updatedAt:new Date};await c.k6.workOrders.add(n)}async calculateMileageRate(e){let t=Math.max(1,Math.floor((Date.now()-e.createdAt.getTime())/864e5));return(e.odometer||0)/t}projectNextMaintenance(e,t){return new Date(Date.now()+5e3/Math.max(1,t)*864e5)}async completeWorkOrder(e,t){let n=await c.k6.workOrders.get(e);if(!n)throw Error("Work order not found");await c.k6.workOrders.update(e,{status:"completed",completedDate:new Date,cost:t.cost,parts:t.parts,labor:t.labor,notes:t.notes,updatedAt:new Date});let a=await c.k6.vehicles.get(n.vehicleId);a&&await l.updateVehicle(a.id,{status:"active",lastMaintenance:new Date})}async getMaintenanceDashboard(e){let t=await c.k6.vehicles.where("fleetId").equals(e).toArray(),n=new Set(t.map(e=>e.id)),a=(await c.k6.workOrders.toArray()).filter(e=>n.has(e.vehicleId)),i=a.filter(e=>"pending"===e.status).length,r=a.filter(e=>"scheduled"===e.status).length,s=a.filter(e=>"in_progress"===e.status).length,l=a.filter(e=>"completed"===e.status).length,d=a.filter(e=>"completed"===e.status).reduce((e,t)=>e+(t.cost||0),0),o=t.filter(e=>e.nextMaintenance&&e.nextMaintenance<=new Date(Date.now()+2592e6)).length;return{summary:{totalVehicles:t.length,pendingWorkOrders:i,scheduledWorkOrders:r,inProgressWorkOrders:s,completedThisMonth:l,totalCostThisMonth:d,upcomingMaintenance:o},recentWorkOrders:a.sort((e,t)=>{var n,a,i,c;return((null===(a=t.createdAt)||void 0===a?void 0:null===(n=a.getTime)||void 0===n?void 0:n.call(a))||0)-((null===(c=e.createdAt)||void 0===c?void 0:null===(i=c.getTime)||void 0===i?void 0:i.call(c))||0)}).slice(0,10),vehiclesDueSoon:t.filter(e=>e.nextMaintenance&&e.nextMaintenance<=new Date(Date.now()+6048e5)).slice(0,10)}}constructor(){this.checkInterval=null}}function u(){let[e,t]=i.useState(!1),[n,c]=i.useState(36e5);i.useEffect(()=>{let e="true"===localStorage.getItem("maintenance_scheduler_enabled"),a=localStorage.getItem("maintenance_scheduler_interval_ms");t(e),a&&c(Number(a)),e&&o.getInstance().startScheduler(Number(a)||n)},[]);let r=t=>{c(t),localStorage.setItem("maintenance_scheduler_interval_ms",String(t)),e&&o.getInstance().startScheduler(t)};return(0,a.jsxs)("div",{style:{display:"flex",gap:12,alignItems:"center"},children:[(0,a.jsx)("button",{onClick:()=>{let a=!e;t(a),localStorage.setItem("maintenance_scheduler_enabled",String(a)),a?o.getInstance().startScheduler(n):o.getInstance().stopScheduler()},children:e?"Stop Maintenance Scheduler":"Start Maintenance Scheduler"}),(0,a.jsxs)("label",{children:["Interval (ms):",(0,a.jsx)("input",{type:"number",value:n,onChange:e=>r(Number(e.target.value)),min:1e4,step:1e4,style:{marginLeft:8}})]})]})}o.getInstance()},40074:function(e,t,n){"use strict";n.d(t,{Cj:function(){return s},Hn:function(){return l},k6:function(){return r}});var a=n(35966),i=n(38608);class c extends a.ZP{constructor(){super("FleetManagementDB"),this.version(1).stores({vehicles:"id, fleetId, status, nextMaintenance, [fleetId+status]",fleets:"id, organizationId, name",maintenanceSchedules:"id, vehicleId, nextDue, [vehicleId+nextDue]",workOrders:"id, vehicleId, status, [vehicleId+status]",syncOperations:"id, entityType, entityId, synced, timestamp",syncConflicts:"id, entityType, entityId, resolvedAt"}),this.on("ready",async()=>{try{await (0,i.o5)()}catch(e){console.warn("[Demo] initializeDemoData failed",e)}})}}let r=new c;async function s(e){}async function l(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{limit:n=50,offset:a=0,status:i}=t,c=i?r.vehicles.where("[fleetId+status]").equals([e,i]):r.vehicles.where("fleetId").equals(e);return a&&(c=c.offset(a)),n&&(c=c.limit(n)),c.toArray()}},38608:function(e,t,n){"use strict";async function a(){}async function i(){await a()}n.d(t,{CP:function(){return i},o5:function(){return a}}),n(40074)}},function(e){e.O(0,[2972,5966,2971,2117,1744],function(){return e(e.s=63306)}),_N_E=e.O()}]);