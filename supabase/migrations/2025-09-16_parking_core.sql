-- 2025-09-16_parking_core.sql
-- Minimal schema for parking forecast MVP
-- Tables: parking_stops, parking_reports
-- Indexes for recency and lookups; narrow grants for authenticated read

begin;
set search_path = public;

create table if not exists public.parking_stops (
  id uuid primary key default gen_random_uuid(),
  name text not null,
  lat double precision not null,
  lng double precision not null,
  phone text null,
  amenities jsonb not null default '{}'::jsonb,
  created_at timestamptz not null default now()
);

create table if not exists public.parking_reports (
  id bigint generated by default as identity primary key,
  stop_id uuid not null references public.parking_stops(id) on delete cascade,
  kind text not null check (kind in ('open','limited','full','count')),
  value integer null check (value is null or value >= 0),
  reported_by uuid null,
  reported_at timestamptz not null default now(),
  source text not null default 'crowd' check (source in ('crowd','operator','sensor'))
);

create index if not exists idx_parking_reports_stop_time on public.parking_reports(stop_id, reported_at desc);
create index if not exists idx_parking_stops_geo on public.parking_stops (lat, lng);

alter table public.parking_stops enable row level security;
alter table public.parking_reports enable row level security;

-- Read policies (org-agnostic public demo read; tighten as needed)
create policy if not exists parking_stops_read on public.parking_stops for select to authenticated using (true);
create policy if not exists parking_reports_read on public.parking_reports for select to authenticated using (true);

-- Writes typically via service role; do not grant to authenticated by default

commit;
